{"version":3,"file":"static/js/546.18e1fcf8.chunk.js","mappings":"yOAIaA,GAAWC,EAAAA,EAAAA,IACtB,gBADsC,mCAEtC,WAAOC,EAAGC,GAAV,2FAEgCC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,UAFvD,cAIkBC,SAAQ,SAAAC,GACpBC,QAAQC,IAAR,UAAeF,EAAIG,GAAnB,eAA4BH,EAAII,QAEjC,IAPL,gDASIH,QAAQC,IAAR,MATJ,yDAFsC,yD,SCAzB,SAASG,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAKjB,OAJAC,EAAAA,EAAAA,YAAU,WACRF,EAASd,IACV,GAAE,CAACc,KAEG,kCACR,C","sources":["redux/posts/postsOperations.js","components/pages/Posts.jsx"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { db } from '../../firebase/firebase.config';\nimport { collection, getDocs } from 'firebase/firestore';\n\nexport const getPosts = createAsyncThunk(\n  'posts/get/all',\n  async (_, thunkAPI) => {\n    try {\n      const querySnapshot = await getDocs(collection(db, 'posts'));\n      //   console.log(querySnapshot);\n      querySnapshot.forEach(doc => {\n        console.log(`${doc.id} => ${doc.data()}`);\n        // console.log(doc.id);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n);\n\n// const unsubscribe = onSnapshot(q, data => {\n//   setPosts([]);\n//   data.forEach(doc => {\n//     setPosts(prevPosts => {\n//       const newPost = { ...doc.data(), id: doc.id };\n//       return [...prevPosts, newPost];\n//     });\n//   });\n// });\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getPosts } from 'redux/posts/postsOperations';\n\nexport default function Posts() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch]);\n\n  return <div>Posts</div>;\n}\n"],"names":["getPosts","createAsyncThunk","_","thunkAPI","getDocs","collection","db","forEach","doc","console","log","id","data","Posts","dispatch","useDispatch","useEffect"],"sourceRoot":""}